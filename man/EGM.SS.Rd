% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EGM.R
\name{EGM.SS}
\alias{EGM.SS}
\title{Select non-zero edges via a stable selection method for the estimator of the likelihood-based Exponential Graphical Model. Produce the non-zero probability for each edge and the selected edges based on the chosen cutoff threshold.}
\usage{
EGM.SS(
  X,
  model,
  theta = 0,
  lambda = NULL,
  NMC = 500,
  step_size = 0.003,
  epsilon = 1e-04,
  max_iter = 3000,
  stable_pi = 0.6,
  par = FALSE,
  max_cores = 4
)
}
\arguments{
\item{X}{Input dataset, of dimension n x p; each row is an observation vector.}

\item{model}{The model to be fitted. The model must be either "pgm" or "ising".}

\item{theta}{The initial value of the parameter. Default is 0.}

\item{lambda}{A gird of lambda (penalty parameter) values used for the EGM.fit. Expecting at least 5 different lambda values to perform the stable selection.}

\item{NMC}{The number of Monte Carlo samples for approximate the gradient of log likelihood. Default is 500.}

\item{step_size}{The step size for the gradient descent. Default is 0.003.}

\item{epsilon}{The convergence criterion. Default is 0.0001.}

\item{max_iter}{The maximum number of iterations. Default is 3000.}

\item{stable_pi}{The cutoff threshold for selecting the edges. Default is 0.6.}

\item{par}{Logical. If TRUE, the function will run in parallel. Default is FALSE.}

\item{max_cores}{The maximum number of cores to be used for parallel computation. Default is 4.}
}
\value{
A list containing the following elements: 
\itemize{
  \item selection_prob: The non-zero probability for each edge, a p xp matrix.
  \item selected_edges: The selected edges based on chosen cuutoff threshold, a p x p matrix.
}
}
\description{
Select non-zero edges via a stable selection method for the estimator of the likelihood-based Exponential Graphical Model. Produce the non-zero probability for each edge and the selected edges based on the chosen cutoff threshold.
}
\examples{

theta0 = gen_theta0(p = 10, omega = 0.8, eta = 0.05, coupling = "negative")
X = IsingSim(n = 100, theta = theta0, max_iter = 1000)
res = EGM.SS(X = X, model = "ising", lambda = seq(5, 70, 5), step_size = 0.0005, par = TRUE, max_cores = 50)
}
