// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _ExponentialGM_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _ExponentialGM_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _ExponentialGM_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _ExponentialGM_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// prob_kernel_cpp_pgm
double prob_kernel_cpp_pgm(arma::vec y, arma::mat theta);
RcppExport SEXP _ExponentialGM_prob_kernel_cpp_pgm(SEXP ySEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_kernel_cpp_pgm(y, theta));
    return rcpp_result_gen;
END_RCPP
}
// z_functions_cpp_pgm
List z_functions_cpp_pgm(arma::mat theta, int N, arma::mat phi);
RcppExport SEXP _ExponentialGM_z_functions_cpp_pgm(SEXP thetaSEXP, SEXP NSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(z_functions_cpp_pgm(theta, N, phi));
    return rcpp_result_gen;
END_RCPP
}
// loglike_grad_cpp_pgm
arma::mat loglike_grad_cpp_pgm(arma::mat theta, arma::mat X, int N);
RcppExport SEXP _ExponentialGM_loglike_grad_cpp_pgm(SEXP thetaSEXP, SEXP XSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(loglike_grad_cpp_pgm(theta, X, N));
    return rcpp_result_gen;
END_RCPP
}
// z_theta_cpp_pgm
double z_theta_cpp_pgm(arma::mat theta, int N, arma::mat phi);
RcppExport SEXP _ExponentialGM_z_theta_cpp_pgm(SEXP thetaSEXP, SEXP NSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(z_theta_cpp_pgm(theta, N, phi));
    return rcpp_result_gen;
END_RCPP
}
// loglike_cpp_pgm
double loglike_cpp_pgm(arma::mat theta, arma::mat X, int N);
RcppExport SEXP _ExponentialGM_loglike_cpp_pgm(SEXP thetaSEXP, SEXP XSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(loglike_cpp_pgm(theta, X, N));
    return rcpp_result_gen;
END_RCPP
}
// HMC_cpp_pgm
List HMC_cpp_pgm(Function U, Function grad_U, double epsilon, int L, arma::vec current_q, arma::mat matrix_A);
RcppExport SEXP _ExponentialGM_HMC_cpp_pgm(SEXP USEXP, SEXP grad_USEXP, SEXP epsilonSEXP, SEXP LSEXP, SEXP current_qSEXP, SEXP matrix_ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type U(USEXP);
    Rcpp::traits::input_parameter< Function >::type grad_U(grad_USEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type current_q(current_qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type matrix_A(matrix_ASEXP);
    rcpp_result_gen = Rcpp::wrap(HMC_cpp_pgm(U, grad_U, epsilon, L, current_q, matrix_A));
    return rcpp_result_gen;
END_RCPP
}
// z_functions_cpp_ising
List z_functions_cpp_ising(arma::mat theta, int N, arma::mat phi);
RcppExport SEXP _ExponentialGM_z_functions_cpp_ising(SEXP thetaSEXP, SEXP NSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(z_functions_cpp_ising(theta, N, phi));
    return rcpp_result_gen;
END_RCPP
}
// loglike_grad_cpp_ising
arma::mat loglike_grad_cpp_ising(arma::mat theta, arma::mat X, int N);
RcppExport SEXP _ExponentialGM_loglike_grad_cpp_ising(SEXP thetaSEXP, SEXP XSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(loglike_grad_cpp_ising(theta, X, N));
    return rcpp_result_gen;
END_RCPP
}
// prob_kernel_cpp_ising
double prob_kernel_cpp_ising(arma::vec y, arma::mat theta);
RcppExport SEXP _ExponentialGM_prob_kernel_cpp_ising(SEXP ySEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_kernel_cpp_ising(y, theta));
    return rcpp_result_gen;
END_RCPP
}
// z_theta_cpp_ising
double z_theta_cpp_ising(arma::mat theta, int N, arma::mat phi);
RcppExport SEXP _ExponentialGM_z_theta_cpp_ising(SEXP thetaSEXP, SEXP NSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(z_theta_cpp_ising(theta, N, phi));
    return rcpp_result_gen;
END_RCPP
}
// loglike_cpp_ising
double loglike_cpp_ising(arma::mat theta, arma::mat X, int N);
RcppExport SEXP _ExponentialGM_loglike_cpp_ising(SEXP thetaSEXP, SEXP XSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(loglike_cpp_ising(theta, X, N));
    return rcpp_result_gen;
END_RCPP
}
// HMC_cpp_ising
List HMC_cpp_ising(Function U, Function grad_U, double epsilon, int L, arma::vec current_q);
RcppExport SEXP _ExponentialGM_HMC_cpp_ising(SEXP USEXP, SEXP grad_USEXP, SEXP epsilonSEXP, SEXP LSEXP, SEXP current_qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type U(USEXP);
    Rcpp::traits::input_parameter< Function >::type grad_U(grad_USEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type current_q(current_qSEXP);
    rcpp_result_gen = Rcpp::wrap(HMC_cpp_ising(U, grad_U, epsilon, L, current_q));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ExponentialGM_rcpparma_hello_world", (DL_FUNC) &_ExponentialGM_rcpparma_hello_world, 0},
    {"_ExponentialGM_rcpparma_outerproduct", (DL_FUNC) &_ExponentialGM_rcpparma_outerproduct, 1},
    {"_ExponentialGM_rcpparma_innerproduct", (DL_FUNC) &_ExponentialGM_rcpparma_innerproduct, 1},
    {"_ExponentialGM_rcpparma_bothproducts", (DL_FUNC) &_ExponentialGM_rcpparma_bothproducts, 1},
    {"_ExponentialGM_prob_kernel_cpp_pgm", (DL_FUNC) &_ExponentialGM_prob_kernel_cpp_pgm, 2},
    {"_ExponentialGM_z_functions_cpp_pgm", (DL_FUNC) &_ExponentialGM_z_functions_cpp_pgm, 3},
    {"_ExponentialGM_loglike_grad_cpp_pgm", (DL_FUNC) &_ExponentialGM_loglike_grad_cpp_pgm, 3},
    {"_ExponentialGM_z_theta_cpp_pgm", (DL_FUNC) &_ExponentialGM_z_theta_cpp_pgm, 3},
    {"_ExponentialGM_loglike_cpp_pgm", (DL_FUNC) &_ExponentialGM_loglike_cpp_pgm, 3},
    {"_ExponentialGM_HMC_cpp_pgm", (DL_FUNC) &_ExponentialGM_HMC_cpp_pgm, 6},
    {"_ExponentialGM_z_functions_cpp_ising", (DL_FUNC) &_ExponentialGM_z_functions_cpp_ising, 3},
    {"_ExponentialGM_loglike_grad_cpp_ising", (DL_FUNC) &_ExponentialGM_loglike_grad_cpp_ising, 3},
    {"_ExponentialGM_prob_kernel_cpp_ising", (DL_FUNC) &_ExponentialGM_prob_kernel_cpp_ising, 2},
    {"_ExponentialGM_z_theta_cpp_ising", (DL_FUNC) &_ExponentialGM_z_theta_cpp_ising, 3},
    {"_ExponentialGM_loglike_cpp_ising", (DL_FUNC) &_ExponentialGM_loglike_cpp_ising, 3},
    {"_ExponentialGM_HMC_cpp_ising", (DL_FUNC) &_ExponentialGM_HMC_cpp_ising, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ExponentialGM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
